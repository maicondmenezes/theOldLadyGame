{"version":3,"sources":["layout/Login.jsx","layout/GameScreen.jsx","App.jsx","index.js"],"names":["responseGoogle","response","console","log","withStyles","theme","root","color","backgroundColor","green","props","Container","component","maxWidth","className","Typography","variant","TextField","id","type","label","margin","required","fullWidth","autoComplete","Button","size","startIcon","clientId","render","renderProps","onClick","disabled","onSuccess","onFailure","cookiePolicy","GameScreen","state","history","squares","Array","fill","stepNumber","xIsNext","i","this","slice","length","calculateWinner","setState","concat","step","status","winner","moves","map","move","desc","BottomNavigationAction","value","key","icon","jumpTo","title","BottomNavigation","onChange","handleChange","showLabels","React","Component","lines","a","b","c","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.37d63478.chunk.js","sourcesContent":["import '../css/Login.css'\r\nimport React, { Component } from 'react';\r\nimport { withStyles }       from '@material-ui/core/styles';\r\nimport Container            from '@material-ui/core/Container';\r\nimport GoogleLogin          from 'react-google-login';\r\nimport TextField            from '@material-ui/core/TextField';\r\nimport Button               from '@material-ui/core/Button';\r\nimport Typography           from '@material-ui/core/Typography';\r\nimport Link                 from '@material-ui/core/Link';\r\nimport ExitToAppIcon        from '@material-ui/icons/ExitToApp';\r\nimport ContactMailIcon      from '@material-ui/icons/ContactMail';\r\nimport MailIcon             from '@material-ui/icons/Mail';\r\nimport green                from '@material-ui/core/colors/green';\r\n\r\nconst responseGoogle = (response) => {\r\n  console.log(response);\r\n}\r\n\r\nconst ColorButton = withStyles (theme => ({\r\n  root: {\r\n    color: '#fff',\r\n    backgroundColor: green[300]\r\n  }\r\n}))\r\n\r\nexport default props => (  \r\n  <div>\r\n    <Container \r\n      component = 'main'\r\n      maxWidth = 'xs'\r\n    >\r\n      <div className = 'mt-3 mt-md-5'>\r\n        <div className = 'text-center'>\r\n          <Typography\r\n            className = 'mt-3 font-weight-normal'\r\n            component = 'h1'\r\n            variant = 'h6'\r\n          >\r\n            The Most Famous Game TicTacToe\r\n          </Typography>\r\n        </div>\r\n\r\n        <div className = 'mt-4'>\r\n          <TextField \r\n            id = 'email'\r\n            type = 'email'\r\n            label = 'Login'\r\n            margin = 'normal'\r\n            required\r\n            fullWidth\r\n          />\r\n\r\n          <TextField \r\n            id = 'standard-password-input'\r\n            type = 'password'\r\n            label = 'Password'\r\n            margin = 'normal'           \r\n            required\r\n            fullWidth\r\n            autoComplete = 'current-password'\r\n          />\r\n\r\n          <Button\r\n            type = 'button'\r\n            variant = 'contained'\r\n            color = 'secondary'        \r\n            size = 'large'\r\n            className = 'mb-3 mb-md-4 mt-4'\r\n            fullWidth\r\n            startIcon={<ExitToAppIcon />}\r\n          >\r\n            LogIn\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n    \r\n    <div className = 'LoginButons'>\r\n      <div className = 'SignInButton'>\r\n      <Button\r\n        type = 'button'\r\n        variant = 'contained'\r\n        color = 'primary'        \r\n        size = 'large'\r\n        className = 'mb-3 mb-md-4 mt-4'  \r\n        fullWidth      \r\n        startIcon={<ContactMailIcon />}\r\n      >\r\n        SignIn\r\n      </Button>      \r\n      </div>   \r\n      <div className = 'GoogleLogin'>\r\n        <GoogleLogin\r\n        clientId = '1046602992163-lcg3jivp3la2ekhcsthdftf18ktjrvs7.apps.googleusercontent.com'\r\n        render={renderProps => (\r\n          <Button \r\n            type = 'button'\r\n            variant = 'contained'\r\n            color = 'warning'        \r\n            size = 'large'\r\n            className = 'mb-3 mb-md-4 mt-4'\r\n            onClick={renderProps.onClick} \r\n            disabled={renderProps.disabled}   \r\n            fullWidth         \r\n            startIcon={<MailIcon />}\r\n          >\r\n            Google\r\n          </Button>\r\n        )}        \r\n        className = 'GoogleButton'\r\n        onSuccess={responseGoogle}\r\n        onFailure={responseGoogle}\r\n        cookiePolicy={'single_host_origin'}\r\n        />\r\n      </div>     \r\n    </ div>\r\n  </div>\r\n)","import '../css/GameScreen.css'\r\nimport React from 'react'\r\n// import Board from './Board'\r\nimport Login from './Login'\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\n\r\nclass GameScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null)\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n    }\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = \r\n      this.state.history.slice(0, \r\n      this.state.stepNumber + 1\r\n    );\r\n    const current = history[history.length - 1];\r\n    const squares =current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares\r\n      }]),   \r\n      stepNumber: history.length,   \r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }  \r\n    \r\n  render(){\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n \r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? '' + move : 'B';\r\n      return (\r\n        \r\n        <BottomNavigationAction \r\n          label={'Step:'+desc}\r\n          value ={'Step:'+desc}\r\n          key={move}\r\n          className='StepItem'\r\n          icon={<RestoreIcon />}\r\n          onClick={() => this.jumpTo(move)}\r\n          >\r\n            {desc}          \r\n        </BottomNavigationAction>\r\n      );\r\n    });\r\n    \r\n    let status;\r\n    if(winner) {\r\n      status = 'Winner is Player ' + winner;\r\n    } else {\r\n      status = 'Next Player is ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n    return(\r\n        <div className='GameScreen'>\r\n        <div className='Title'>\r\n          {this.props.title}\r\n        </div>\r\n        <div className='Board'>\r\n          <Login />\r\n          {/* <Board \r\n            squares ={current.squares}\r\n            onClick ={(i) => this.handleClick(i)}\r\n          /> */}\r\n        </div>\r\n        <div className='Status'>\r\n          <div>{status}</div>\r\n          <p className='StepTitle'>Steps:</p>\r\n          <BottomNavigation \r\n            value={this.value}\r\n            onChange = {this.handleChange}\r\n            className='Steps' \r\n            showLabels           \r\n          >\r\n            {moves}\r\n          </BottomNavigation>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GameScreen\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] \r\n        && squares[a] === squares[b] \r\n        && squares[a] === squares[c]){\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}","import './css/App.css'\r\nimport React from 'react'\r\nimport GameScreen from './layout/GameScreen'\r\n\r\nexport default props => (\r\n  <div className = 'App'>    \r\n    <GameScreen title = '-The Old Lady Game-' />\r\n  </div>\r\n)\r\n","import './css/index.css'\r\nimport App from './App'\r\nimport React from 'react'\r\nimport ReactDom from 'react-dom'\r\n\r\nReactDom.render( \r\n  <App />\r\n  ,  \r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}